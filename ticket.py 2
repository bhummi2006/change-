import hashlib
import json
import time

# -----------------------
# Blockchain Class
# -----------------------
class Blockchain:
    def __init__(self):
        self.chain = []
        self.pending_tickets = []
        # Create genesis block
        self.new_block(proof=100, previous_hash="1")

    def new_block(self, proof, previous_hash=None):
        block = {
            "index": len(self.chain) + 1,
            "timestamp": time.time(),
            "tickets": self.pending_tickets,
            "proof": proof,
            "previous_hash": previous_hash or self.hash(self.chain[-1]),
        }
        self.pending_tickets = []
        self.chain.append(block)
        return block

    def new_ticket(self, student_name, event_name):
        ticket_id = hashlib.sha256(f"{student_name}{event_name}{time.time()}".encode()).hexdigest()[:10]
        ticket = {
            "ticket_id": ticket_id,
            "student": student_name,
            "event": event_name,
            "timestamp": time.time(),
        }
        self.pending_tickets.append(ticket)
        return ticket

    @staticmethod
    def hash(block):
        return hashlib.sha256(json.dumps(block, sort_keys=True).encode()).hexdigest()

    def last_block(self):
        return self.chain[-1]


# -----------------------
# Simulation
# -----------------------
if __name__ == "__main__":
    blockchain = Blockchain()

    events = ["Dandiya Night", "Painting", "Movie", "Carnival", "DJ Night"]
    students = ["Alice", "Bob", "Charlie", "David", "Eve"]

    for student, event in zip(students, events):
        print(f"\nIssuing ticket for {student} -> {event}")
        ticket = blockchain.new_ticket(student, event)
        block = blockchain.new_block(proof=12345)
        print("Ticket:", ticket)
        print("Block created:", block["index"])
        print("Block hash:", blockchain.hash(block))

    # Display full blockchain
    print("\n================ BLOCKCHAIN ================")
    for block in blockchain.chain:
        print(json.dumps(block, indent=4, default=str))
